<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee" xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
     http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

<!--     <context:component-scan base-package="kr.pe.jihoon.service" /> -->
    <!-- 요놈이 핵심! 
        com.spring.web 하위 모든 패키지에 있는 파일의 어노테이션을 스캔해서 
        빈으로 등록하겠다는 말이지요~ -->
<!--     <context:component-scan base-package="com.spring.web" /> -->

    <context:annotation-config />

    <tx:annotation-driven />

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <value>WEB-INF/properties/jdbc.properties</value>
        </property>
    </bean>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName"    value="${jdbc.driverClassName}" />
        <property name="url"                value="${jdbc.url}" />
        <property name="username"           value="${jdbc.username}" />
        <property name="password"           value="${jdbc.password}" />
        
        <property name="maxActive"          value="10" />
        <property name="maxIdle"            value="3" />
        <property name="maxWait"            value="10000" />
        <property name="defaultAutoCommit"  value="true" />   <!--  기본:true  -->
        <property name="validationQuery"    value="select 1 from dual" />
    </bean>

    <!-- SqlSessionFactoryBean : SqlSessionTemplate 객체를 얻는다. -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" lazy-init="true">
        <property name="dataSource"         ref="dataSource" />
        <property name="configLocation"     value="/WEB-INF/mybatis/mybatis-config.xml" />
        <property name="mapperLocations"    value="/WEB-INF/mybatis/mapper/*.xml" />
        <!-- <property name="transactionFactory"> <bean class="org.apache.ibatis.transaction.managed.ManagedTransactionFactory" /> </property> -->
    </bean>

    <!-- SqlSessionTemplate : MyBatis SQL method 호출 및 관리, 예예처리 담당 -->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory" />
    </bean>

    <!-- 트랜잭션관리자. -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 트랜잭션과 관련된 작업(트랜잭션시작, 커및, 롤백등) -->
    <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="transactionManager" />
    </bean>

</beans>